name: Install Kubeflow on AWS EKS

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    - name: Check out code
      uses: actions/checkout@v2
    
    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        #role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        #role-duration-seconds: 1800
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Install Kubeflow
      run: |
        aws configure set region eu-central-1
        aws configure set access_key ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set secret_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        mkdir -p kubeconfig
        aws s3 cp s3://gfb-ml-ops-tf-infrastructure/eks-kubeflow/kubeconfig_kubeflow-cluster ./kubeconfig/
        brew install kubectl
        brew install ksonnet/tap/ks
        brew install aws-iam-authenticator
        export KUBECONFIG=./kubeconfig/kubeconfig_kubeflow-cluster
        export NAMESPACE=kubeflow
        export KUBEFLOW_VERSION=0.2.5
        export KUBEFLOW_DEPLOY=false
        export KUBEFLOW_SRC=./tmp/kubeflow-aws
        export KUBEFLOW_TAG=master
        set -xe

        KUBEFLOW_REPO=${KUBEFLOW_REPO:-"`pwd`/kubeflow_repo"}
        KUBEFLOW_VERSION=${KUBEFLOW_VERSION:-"v0.2-branch"}
        KUBEFLOW_DEPLOY=${KUBEFLOW_DEPLOY:-true}

        if [[ ! -d "${KUBEFLOW_REPO}" ]]; then
          if [ "${KUBEFLOW_VERSION}" == "v0.2-branch" ]; then
        	TAG=${KUBEFLOW_VERSION}
          else
          	TAG=v${KUBEFLOW_VERSION}
          fi  
          TMPDIR=$(mktemp -d /tmp/tmp.kubeflow-repo-XXXX)
          curl -L -o ${TMPDIR}/kubeflow.tar.gz https://github.com/kubeflow/kubeflow/archive/${TAG}.tar.gz
          tar -xzvf ${TMPDIR}/kubeflow.tar.gz  -C ${TMPDIR}
          # GitHub seems to strip out the v in the file name.
          SOURCE_DIR=$(find ${TMPDIR} -maxdepth 1 -type d -name "kubeflow*")
          mv ${SOURCE_DIR} "${KUBEFLOW_REPO}"
        fi

        source "${KUBEFLOW_REPO}/scripts/util.sh"

        # TODO(ankushagarwal): verify ks version is higher than 0.11.0
        check_install ks
        check_install kubectl

        # Name of the deployment
        DEPLOYMENT_NAME=${DEPLOYMENT_NAME:-"kubeflow"}

        KUBEFLOW_KS_DIR=${KUBEFLOW_KS_DIR:-"`pwd`/${DEPLOYMENT_NAME}_ks_app"}

        cd $(dirname "${KUBEFLOW_KS_DIR}")
        ks init
        cd "${KUBEFLOW_KS_DIR}"

        # Add the local registry
        ks registry add kubeflow "${KUBEFLOW_REPO}/kubeflow"

        # Install packages
        ks pkg install kubeflow/argo
        ks pkg install kubeflow/core
        ks pkg install kubeflow/examples
        ks pkg install kubeflow/katib
        ks pkg install kubeflow/mpi-job
        ks pkg install kubeflow/pytorch-job
        ks pkg install kubeflow/seldon
        ks pkg install kubeflow/tf-serving

        # Generate all required components
        ks generate kubeflow-core kubeflow-core

        # Enable collection of anonymous usage metrics
        # Skip this step if you don't want to enable collection.
        ks param set kubeflow-core reportUsage true
        ks param set kubeflow-core usageId $(uuidgen)

        # Apply the components generated
        if ${KUBEFLOW_DEPLOY}; then
          ks apply default
        fi