name: Install Kubeflow on AWS EKS cluster

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    - name: Check out code
      uses: actions/checkout@v2
    
    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Install Kubeflow
      run: |
        # Export AWS credentials as environment variables:
        export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
        export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}

        # Load kubeconfig from S3 bucket:
        aws configure set region eu-central-1
        aws configure set access_key ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set secret_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        mkdir -p kubeconfig
        aws s3 cp s3://gfb-ml-ops-tf-infrastructure/eks-kubeflow/kubeconfig_kubeflow-cluster ./kubeconfig/

        # Set kubeconfig:
        export KUBECONFIG=./kubeconfig/kubeconfig_kubeflow-cluster

        # Download & install eksctl:
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
        sudo mv /tmp/eksctl /usr/local/bin

        # Download aws-iam-authenticator:
        curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
        chmod +x ./aws-iam-authenticator
        mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin

        # Download & install kubectl:
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

        # Download and install kfctl:
        wget https://github.com/kubeflow/kfctl/releases/download/v1.2.0/kfctl_v1.2.0-0-gbc038f9_linux.tar.gz
        tar -xvf kfctl_v1.2.0-0-gbc038f9_linux.tar.gz

        # Get KfDef from kfctl_aws:
        export NAMESPACE=kubeflow
        export PATH=$PATH:$PWD
        export CONFIG_URI="https://raw.githubusercontent.com/GianniBalistreri/ml-ops-aws-eks-kubeflow/main/ml_ops/kubeflow/kfctl_aws.v1.2.0.yml"
        mkdir kubeflow-cluster && cd kubeflow-cluster
        wget -O kfctl_aws.yaml $CONFIG_URI

        # Update kubeconfig on EKS cluster:
        aws eks update-kubeconfig --name kubeflow-cluster

        # Install & deploy Kubeflow on EKS cluster:
        kfctl apply -V -f kfctl_aws.yaml

        # Show installed kubeflow components:
        kubectl -n kubeflow get all

        # Show istio-ingress information:
        kubectl get ingress -n istio-system

        # Expose istio-ingress to Load Balancer:
        kubectl patch service -n istio-system istio-ingressgateway -p '{"spec": {"type": "LoadBalancer"}}'

        # Port forwarding istio-ingress address is empty:
        kubectl port-forward kubeflow/istio-ingressgateway -n istio-system 7777:80